box: golang

build:
  steps:
    - script:
      name: set API_VERSION
      code: export API_VERSION="v0.2.1"

    - install-packages:
        packages: lirc

    - script:
      name: print version
      code: |
        go version
        lircd -v
        echo "API_VERSION=$API_VERSION"

    - script:
      name: launch lircd
      code: |
        export LIRC_RUN_PATH=$WERCKER_SOURCE_DIR/lirc/test
        cp $LIRC_RUN_PATH/lircd.conf /etc/lirc/
        mkdir -p /var/run/lirc
        lircd --allow-simulate \
              --driver default

    - setup-go-workspace:
      package-dir: github.com/ww24/lirc-web-api

    - script:
      name: glide install
      code: |
        curl https://glide.sh/get | sh
        glide install

    - script:
      name: go get
      code: |
        go get -u github.com/mitchellh/gox

    - script:
      name: go test
      code: |
        go test -v $(glide nv)

    - script:
      name: cross compile
      code: |
        gox \
          -osarch="darwin/amd64 linux/386 linux/amd64 linux/arm windows/386 windows/amd64" \
          -tags="prod" \
          -ldflags="-X main.version=$API_VERSION" \
          -output="$WERCKER_OUTPUT_DIR/api_{{.OS}}_{{.Arch}}"

    - script:
      name: copy to output
      code: |
        cp "$WERCKER_SOURCE_DIR/README.md" "$WERCKER_OUTPUT_DIR"

deploy:
  steps:
    - install-packages:
        packages: lirc file

    - github-create-release:
      token: $GITHUB_TOKEN
      tag: $(./api_linux_386 -v)

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_darwin_amd64

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_linux_386

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_linux_amd64

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_linux_arm

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_windows_386.exe

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_windows_amd64.exe
